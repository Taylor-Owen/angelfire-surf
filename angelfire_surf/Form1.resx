<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWf
        cf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWf
        cf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3D/JJ9w/ySfb/8kn3D/JZ9w/yWf
        cf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWf
        cf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcP8knm//JJ5x/yedef8rnYX/LZ2K/yye
        h/8pnn7/Jp50/ySfb/8kn3D/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWf
        cf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8kn3D/JJ5z/zKekf9Sp7z/cbPZ/4O6
        6P+Hu+z/f7fp/2uu4P9To8v/O52q/yydhP8lnnD/JZ9w/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWf
        cf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JJ1v/y2dhP9gr8L/oMbs/6u8
        8f+Zoun/i5Tk/4qU5P+Sn+f/pLTu/7DI9P+bw/X/Zqni/zydq/8nnnf/JJ9w/yWfcf8ln3H/JZ9x/yWf
        cf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/ySdb/86opT/kMLe/6m0
        7f9rbdr/PEHR/zA4zv8uOs//Lz7Q/zJE0f86TtL/UGTX/4KT4/+yxvL/hrjy/0Oeu/8onnn/JJ5u/ySf
        b/8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8jnW//O6OP/6LH
        4/+LjeT/OjnP/yotzP8vNc7/MDvP/zI/0P8zQ9H/NkjS/zdN0v83T9P/NVDU/1Nt2f+sv+7/kL/z/1Oi
        0f85naX/Lp6I/yWecf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yug
        fP+VxdT/gn/h/y0pzP8sLM3/LjPO/zA5zv8xPdD/M0HR/zVG0v83StL/OE7S/z9Y1f+BleL/epDh/1l0
        2/+Zrun/rsr1/5vD9f9kqOD/LZ2F/ySfb/8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWf
        cf8ln3H/Z7mp/5qg5f8xK8z/KyrM/y0wzf8uNs7/MDvP/zI/0P80RNH/NUjT/zdN0v83T9P/WW7a/7zT
        9P+oy/X/rL/t/5Cl5/+tve3/4+r4/5G/8v88nbL/KJ54/ySfcP8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWf
        cf8ln3H/JZ9x/yWfcf+hys7/XFfY/ykly/8tLs3/LjPO/y85z/8xPc//M0HQ/zVG0v82StP/OE/T/zlT
        1P9IYtf/pLfs/7LN9P/L3PX/y9by/6/A7v+2xu//uND0/4q78/9Ln8j/Kp5//ySfcP8ln3H/JZ9x/yWf
        cf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/6m/2v8+OdD/LCrN/y0xzf8vNs7/MTvP/zI/0P80RNH/NkjT/zdN
        0/84UdP/OVXU/zpZ1f9HZNf/XHjc/1l43f9Mbtv/Rmvb/0pv2/9kheD/q8Du/5nC9/9InsP/Jp52/ySf
        cP8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/pLfa/zk20P8tLc3/LjTO/y85zv8xPtD/NELR/zVG
        0v82S9L/OE/T/zpT1P87V9T/PFvW/z5e1/8+Ydf/QWXY/0Vp2v9Ibdv/SnDb/1F43f9agd//rsTw/4S3
        8f88na//J552/ySfcP8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf+rwdj/QUDS/y0wzf8vN8//LzvP/zJA
        0P80RNH/NkjT/zdN0/84UdT/OlXU/ztZ1f8+Xdb/P2HY/0Jl2P9EaNr/R2vb/0hu2/9dgN//s8fw/563
        7P96m+X/tc7z/4a48v9MoMn/Lp6H/yWfcP8ln3H/JZ9x/yWfcf8ln3H/JZ9x/5/Kxv9aXNf/KzLN/zA6
        z/8xPtD/M0LQ/zVG0v82S9P/N0/T/zlT1P87V9X/PFzV/z9f1/9AY9j/Q2fZ/0Zq2/9Ibdz/SG/c/2eJ
        4f+/1vT/s9P2/73Q8f+atOr/w9Tz/6XJ+P9Hn7//JJ5w/yWfcf8ln3H/JZ9x/yWfcf8ln3H/cMCh/4iR
        3v8tNs7/MDzP/zJA0P81RNL/NknT/zdN0/84UdT/OlXV/zxa1f8+Xdb/QGHY/0Jl2f9EaNr/R2zc/0xx
        3P9SeN7/T3fd/4Gg5f+vxvD/xNXz/7jL8f/G1fL/0uP3/2uq5/83nZ//JZ5x/yWfcf8ln3H/JZ9x/yWf
        cf84qHz/osLS/0ZP1f8vPc//M0PR/zVH0/83S9P/N0/T/zhS1P86WNX/PVzW/z9f1/8/Y9j/R2ra/0dr
        2/9GbNv/YYTg/7zM8f+Cn+b/UXrf/1aB4P9bheL/WoXj/2WP5P+Tsuz/uNP2/2yr6f8xnZL/JJ9v/yWf
        cf8ln3H/JZ9x/yKeb/9xv6L/jZjg/zJA0f8zRNH/NUnT/zZN0/9AWNX/SmPY/z1b1v88XNb/P2DX/2N/
        3/+qwOz/nLXm/1p83v9bft//xdf0/7zV9v+Pq+r/VoLh/1mE4/+Gpun/jKzr/2KP5f+Qsez/rs74/0uf
        yv8onnv/JJ9v/ySfb/8ln3H/JJ9w/y6idf+XycH/dIDf/zNG0v82StP/Q1rV/6e36/+yyfL/m7Dq/1l1
        2/8+YNj/l63p/5zH8/+MwOT/objr/0923f+btOv/o8r1/67O9f+fuu3/cJbl/7/S8v/g7Pj/psDv/2qW
        6P+0zfP/k8Dz/1Sj1P84naT/Kp2B/yWecf8ln3H/I55w/zuofv+gycr/doTg/zdO1P8/V9X/pLTr/6zO
        9v+nzPb/tcjw/1Rz3P9mhOD/scjx/6TJ9v/N4Pf/hqLn/12E4P+pwe//tNH2/9Hk+P/Z5Pb/wtPy/+Tt
        +P/j7vn/psLw/4it7P+vyvP/tdL4/5TA9f9fpt7/Mp6R/yWfcf8ln3H/I55w/zupfv+YysD/k6Xi/1ht
        2/9LZtn/f5Xk/6S57f/Z5Pb/n7Hq/0Vp2v9Yet7/hJ7m/6q+7f++z/H/fp7n/1uD4v94m+f/k7Ds/6fA
        7/+0yfH/w9X0/8vd9v/m7/n/3un4/7XO8/+70/T/3er2/5PD6P8ynZb/JZ9x/yWfcf8ln3H/I55w/y2i
        df9rvJ3/nsnK/6G93P+WrOH/iJ7l/5Wp6f/S2vT/cIzi/0Zt2/9Jcdv/UHjd/2+S5P+Xser/mLLr/2eO
        5P9YhOL/Wofj/12N5f9kkuf/cJ3q/4+y7//D1/X/yuD4/5vF9f92usX/PaeJ/yWec/8ln3H/JZ9x/yWf
        cf8ln3H/JJ5w/yKdb/8sonX/QayC/1e2kP91wab/m8rI/83h5/++0Oz/XH/f/0lz2/9vkeP/1N/1/8LT
        8v/P3PT/0d71/6G97v+GqOr/eqHq/3Od6f9um+v/apnr/2+f6/+ewPH/ttP2/2Wp4/8ynZT/JJ9v/yWf
        cf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8jnnD/Ip5v/yGdbv8roXT/QKuD/3G/o/+pw+T/X4Th/1qB
        4P+dtuz/ytjz/9bh9v/S4vb/0+X4/87i+P+51Pf/tNHy/7DS4/+vz+f/o8Pw/4aw8f+dwfL/ttP4/1qk
        2v8rnoT/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8jnnD/JZ9x/2u9
        n/+uy+D/g6Ho/2KJ4/9giuP/Zo7k/26W5v+GqOv/q8by/7jT9/+IuvL/W6jN/1Kwmf9ywKP/qtTS/6zM
        8v+20vf/nMT2/0Wev/8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWf
        cf8ln3H/JJ5w/0mviP+Oyrn/qM7V/6rK3/+lwuf/mbXs/4Wn7P91nuv/h6vt/7bP8/+bxfb/UqHT/yuc
        h/8wo3b/gcau/8Pd7//K3/r/bavs/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWf
        cf8ln3H/JZ9x/yWfcf8ln3H/I55w/yWfcf8ypHf/QKqA/1W0jv9vv6H/kMu7/6rS1f+uzef/pMHx/77U
        9v+rzPj/WaTZ/yydhf8ln3D/dcGm/8zl5/9ws9X/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWf
        cf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/ySecP8jnnD/Ip5v/yGdb/8knnD/MKR3/02w
        iv9+xa3/stbZ/+Dr9/+myvn/Pp6s/ySeb/8noHL/PqmC/y2he/8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWf
        cf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWf
        cf8kn3H/Ip1v/yKdbv82pnv/iMmx/4DCwP8vnob/JZ9w/yWfcf8jnnD/JZ9w/yWfcf8ln3H/JZ9x/yWf
        cf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWf
        cf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/ySecP8knnD/JZ9x/yWecP8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWf
        cf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWf
        cf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWf
        cf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWf
        cf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWf
        cf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWf
        cf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWfcf8ln3H/JZ9x/yWf
        cf8ln3H/JZ9x/yWfcf8ln3H/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>